*** formatting ***

if not self.top: gen top
if self.fmt=='plain': conv plain
if fmt!='auto' and fmt!=self.fmt: conv final

>>> format() in Mol, assuming fmfit associated with TOP
              .fmt='plain',       .top=None
gen top:      .fmt='plain',       .top=TOP/MYTOP
conv plain:   .fmt=fmtfit/auto,   .top=TOP/MYTOP
conv final:    No

>>> format('FMT') in Mol, assuming FMT associated with TOP
              .fmt='plain',       .top=None
gen top:      .fmt='plain',       .top=MYTOP
conv plain:   .fmt=fmtfit/auto,   .top=MYTOP
conv final:   .fmt=='auto' => Yes;
              .fmt==fmtfit & .fmt!=FMT => Yes;
               OTHER => No
               ----------------
               Yes/No: .fmt=FMT, .top=TOP

>>> [format()] format(FMT) in Mol
              .fmt=fmtfit/auto,   .top=TOP/MYTOP
gen top:       No
conv plain:    No
conv final:   .fmt=='auto' => Yes;
              .fmt==fmtfit & .fmt!=FMT => Yes;
               OTHER => No
               ----------------
               Yes/No: .fmt=FMT, .top=TOP

>>> [format(FMT1)] format(FMT2) in Mol
              .fmt=FMT1,   .top=TOP1
gen top:       No
conv plain:    No
conv final:    FMT1!=FMT2 => Yes;
               OTHER => No
               ----------------
               Yes/No: .fmt=FMT2, .top=TOP2

>>> [format()/format(FMT)] format() in Mol
              .fmt=fmtfit/auto/FMT,   .top=TOP/MYTOP
gen top:       No
conv plain:    No
conv final:    No

>>> [format([FMT])] format([FMT]) in Pdb
              .fmt='plain',       .top=TOP/MYTOP
gen top:       No
conv plain:    ...
conv final:    ...



*** conv plain ***
 * deecopy newres.atoms from top, replace res.atoms with this one, and then update atom list by adding recognized original atoms. For those atoms that cannot find original atoms to update, there is no coordinate in it. 
